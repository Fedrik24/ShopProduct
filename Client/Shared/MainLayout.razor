@inherits LayoutComponentBase
@using Blazored.LocalStorage
@using ShopProduct.Client.Utility
@using ShopProduct.Shared
@inject ILocalStorageService _localstorage;
@inject DataService DataService
@inject NavigationManager NavManager

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <RadzenButton Text="Logout" Click="@Logout" />
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    public string UserId { get; set; }
    public string Username { get; set; }
    public UserLoginData loginData = new UserLoginData();

    protected override async Task OnInitializedAsync()
    {
        UserId = await _localstorage.GetItemAsStringAsync("userId");
        if (string.IsNullOrEmpty(UserId))
        {
            NavManager.NavigateTo("/Login");
        }
        else
        {
            GetUsername();
        }
    }

    async void Logout()
    {
        NavManager.NavigateTo("/Login");
        await _localstorage.RemoveItemAsync($"userId");
    }

    async void GetUsername()
    {
        Dictionary<string, string> loginHeaders = new Dictionary<string, string>
        {
            { "userId", $"{UserId}" },
        };
        loginData = await DataService.ServiceHeaders<UserLoginData>("Login/user", HttpMethod.Get, loginHeaders);
        Username = loginData.Username;
        Console.WriteLine($"loginData : {loginData.Username}");
        
    }
}