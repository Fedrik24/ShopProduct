@page "/Login"
@using Blazored.LocalStorage
@using Radzen
@using System.Text.Json
@using System.Text.Json.Serialization
@using ShopProduct.Client.Utility
@using ShopProduct.Shared
@using System.Net
@inject NavigationManager NavManager
@inject HttpClient Http
@inject DataService DataService
@inject AuthStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject IConfiguration Configuration

<PageTitle>Login</PageTitle>

<h3>Login Test</h3>

@if (userIdLogin != null)
{
    <h4>USER ID : @userIdLogin.Username</h4>
}

<RadzenButton Text="Hello world! " />

<RadzenLogin AllowRegister="true" AllowResetPassword="true"
             Login=@OnLogin />

@code 
{
    string userName = "admin";
    string password = "local";

    public UserLoginData userIdLogin;
    public string Token { get; set; }


    void OnLogin(LoginArgs args)
    {
        LoginAuthenticate(args.Username, args.Password);

    }

    async Task HandleLogin()
    {
        Token = "MyTokenTesting213";
        await LocalStorage.SetItemAsync("token", Token);
        await AuthStateProvider.GetAuthenticationStateAsync();
    }

    private async void LoginAuthenticate(string username, string password)
    {
        Console.WriteLine($"LOGIN AUTHENTICATE");
        Dictionary<string, string> headers = new Dictionary<string, string>
        { 
            { "username", $"{username}" },
            { "password", $"{password}" }
        };

        try
        {
            UserLoginData result = await DataService.LoginService<UserLoginData>("Login", HttpMethod.Get,headers);
            if (result != null)
            {
                Console.WriteLine(result.Username, result.Password);
                Dictionary<string, string> loginHeaders = new Dictionary<string, string>
                {
                    { "userId", $"{result.UserId}" },
                    { "token", $"{Token}" }
                };
                ResponseCode responseCode = await DataService.LoginService<ResponseCode>("Login", HttpMethod.Post, loginHeaders);
                if (!string.IsNullOrEmpty(responseCode.Message))
                {
                    NavManager.NavigateTo("/index");
                }
            }
        }
        catch(Exception e)
        {
            Console.WriteLine($"Exception : {e}");
        }

    }
}
